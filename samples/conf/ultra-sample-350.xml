<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:u="http://www.adroitlogic.org/ultraesb"
       xmlns:s="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
http://www.adroitlogic.org/ultraesb http://schemas.ultraesb.org/ultraesb-2.0.xsd">

    <bean id="ultra-config" class="org.adroitlogic.ultraesb.core.ConfigurationImpl">
        <property name="environment">
            <bean class="org.adroitlogic.ultraesb.api.Environment">
                <constructor-arg name="name" value="sample"/>
            </bean>
        </property>
    </bean>

    <bean id="fileCache" class="org.adroitlogic.ultraesb.core.PooledMessageFileCache">
        <constructor-arg type="int" value="10"/>
    </bean>

    <bean id="http-8280" class="org.adroitlogic.ultraesb.transport.http.HttpNIOListener">
        <constructor-arg ref="fileCache"/>
        <property name="port" value="8280"/>
    </bean>

    <bean id="http-sender" class="org.adroitlogic.ultraesb.transport.http.HttpNIOSender">
        <constructor-arg ref="fileCache"/>
    </bean>

    <bean id="file-rcv" class="org.adroitlogic.ultraesb.transport.file.FileTransportListener"/>
    <bean id="file" class="org.adroitlogic.ultraesb.transport.file.FileTransportSender"/>

    <!--Defines the AS2Manager instance, that configures the AS2 protocol for use-->
    <bean id="as2Manager" class="org.adroitlogic.as2.manager.AS2Manager">
        <constructor-arg value="UltraESB-AS2"/>                     <!--User Agent string to use-->
        <constructor-arg value="adroitlogic"/>                      <!--Local AS2 identifier-->
        <constructor-arg value="as2@adroitlogic.com"/>              <!--Local email address-->
        <constructor-arg ref="ksManager"/>
        <constructor-arg ref="fileCache"/>
        <property name="metricsEngine" ref="metrics-engine"/>
    </bean>

    <!--A bean that defines keystores for use with AS2-->
    <bean id="ksManager" class="org.adroitlogic.as2.util.KeystoreManager">
        <constructor-arg value="samples/conf/keys/server1.jks"/>    <!--Identity store file-->
        <constructor-arg value="JKS"/>                              <!--Identity store type-->
        <constructor-arg value="password"/>                         <!--Identity store password-->
        <constructor-arg value="samples/conf/keys/trust.jks"/>      <!--Trust store file-->
        <constructor-arg value="JKS"/>                              <!--Trust store type    -->
        <constructor-arg value="password"/>                         <!--Trust store password-->
        <property name="identityAlias" value="server1"/>            <!--Alias for identity-->
        <property name="identityKeypass" value="password"/>         <!--Identity Key password-->
    </bean>

    <!--Defines a file polling proxy service that will poll the /tmp/AS2/tosend directory for files that match pattern
    "*.edi" every 2 seconds, and sends them over the AS2 transport to a URL http://localhost:8080/as2/HttpReceiver

    The files sent successfully are moved to the directory /tmp/AS2/sent and those that fail are moved to
    /tmp/AS2/senderror with a timestamp attached in the specified format of the 'ultra.file.move_timestamp_format' property

    In-order to setup a local station at http://localhost:8080/as2/HttpReceiver, you can use an AS2 communication software
    product such as "mendelson AS2".
    For more information, please refer http://docs.adroitlogic.org/display/esb/Setting+up+a+Sample+AS2+Trading+Partner
    -->
    <u:proxy id="file-poller">
        <u:transport id="file-rcv">
            <u:property name="ultra.transport.url" value="file:///tmp/AS2/tosend"/>
            <u:property name="ultra.file.name_pattern" value=".*\.edi"/>
            <u:property name="ultra.polling.start_delay" value="1000"/>
            <u:property name="ultra.polling.repeat_interval" value="2000"/>
            <!--<u:property name="ultra.polling.concurrent" value="true"/>-->
            <!--<u:property name="ultra.polling.cron_expression" value="0/20/40 * * ? * MON-FRI"/>-->
            <u:property name="ultra.file.move_after_process" value="/tmp/AS2/sent"/>
            <u:property name="ultra.file.move_after_failure" value="/tmp/AS2/senderror"/>
            <u:property name="ultra.file.move_timestamp_format" value="yyyy_MM_dd_'T'HH_mm_ss.SSSSZ"/>
        </u:transport>
        <u:target>
            <u:inSequence>
                <u:java import="org.adroitlogic.as2.manager.*;"><![CDATA[
                    Partner partner = new Partner("test");
                    partner.setEncryptCertAlias("server2");
                    partner.setRequestMDN(true);
                    partner.setRequestSignedMDN(true);
                    partner.setSignatureInfo(new org.adroitlogic.as2.api.SignatureInfo(org.adroitlogic.as2.api.SignatureInfo.DigestAlgorithm.SHA256, null));
                    partner.setEncryptionInfo(org.adroitlogic.as2.api.EncryptionInfo.DISABLED);
                    partner.setUrl("http://localhost:8080/as2/HttpReceiver");
                    partner.setRequestAsyncMDN(true);
                    partner.setAsyncReceiptURL("http://localhost:8280/service/AS2AsyncMDNReceiver");

                    mediation.getAS2Manager().prepareAS2MessageForSend(msg, partner);
                ]]></u:java>
            </u:inSequence>
            <u:inDestination>
                <u:address type="default"/>
            </u:inDestination>
            <u:outSequence>
                <u:java><![CDATA[
                    org.adroitlogic.as2.api.SyncResponseInfo srInfo = mediation.getAS2Manager().processSyncResponse(msg);
                    logger.info("Sync response : {}", srInfo);
                ]]></u:java>
            </u:outSequence>
            <u:errorSequence>
                <u:java><![CDATA[
                    logger.info("Error sequence : {}", msg.getLastException());
                    if (msg.isResponse()) {
                        mediation.getAS2Manager().recordSendFailure(msg);
                    }
                    msg.setMarkedAsFailed(true);
                ]]></u:java>
            </u:errorSequence>
        </u:target>
    </u:proxy>

    <!--A service to receive async MDNs -->
    <u:proxy id="AS2AsyncMDNReceiver">
        <u:transport id="http-8280"/>
        <u:target>
            <u:inSequence>
                <u:java><![CDATA[
                    org.adroitlogic.as2.api.AsyncMDNInfo mdnInfo = mediation.getAS2Manager().processAsyncMDN(msg);
                    logger.info("Async MDN received : {}", mdnInfo);
                ]]></u:java>
            </u:inSequence>
        </u:target>
    </u:proxy>

    <bean id="metrics-engine" class="org.adroitlogic.metrics.core.MetricsEngineImpl"/>

</beans>
